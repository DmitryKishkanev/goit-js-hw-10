{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport '../css/1-timer.css';\n\nconst buttonStart = document.querySelector('[data-start]');\nconst fieldDays = document.querySelector('[data-days]');\nconst fieldHours = document.querySelector('[data-hours]');\nconst fieldMinutes = document.querySelector('[data-minutes]');\nconst fieldSeconds = document.querySelector('[data-seconds]');\n\nbuttonStart.addEventListener('click', onClick);\n\nlet userSelectedDate = '';\n\nconst options = {\n  dateFormat: 'd-m-Y H:i',\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      buttonStart.classList.remove('isActive');\n\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        messageColor: '#ffffff',\n        backgroundColor: '#ff0000',\n        icon: 'fa-regular fa-circle-xmark',\n        iconColor: '#a22b2b',\n        position: 'topRight',\n      });\n    }\n\n    userSelectedDate = selectedDates[0];\n    buttonStart.classList.add('isActive');\n\n    console.log(userSelectedDate);\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nfunction onClick() {\n  return setInterval(() => {\n    const timeLeft = convertMs(userSelectedDate - new Date());\n    fieldDays.textContent = addLeadingZero(timeLeft.days);\n    fieldHours.textContent = addLeadingZero(timeLeft.hours);\n    fieldMinutes.textContent = addLeadingZero(timeLeft.minutes);\n    fieldSeconds.textContent = addLeadingZero(timeLeft.seconds);\n  }, 1000);\n}\n\n// Добавляем нуль слева к значениям отображающихся таймером\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["buttonStart","fieldDays","fieldHours","fieldMinutes","fieldSeconds","onClick","userSelectedDate","options","selectedDates","iziToast","flatpickr","timeLeft","convertMs","addLeadingZero","value","ms","days","hours","minutes","seconds"],"mappings":"wvBAOA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5DJ,EAAY,iBAAiB,QAASK,CAAO,EAE7C,IAAIC,EAAmB,GAEvB,MAAMC,EAAU,CACd,WAAY,YACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,IAAI,OACzBR,EAAY,UAAU,OAAO,UAAU,EAEvCS,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,KAAM,6BACN,UAAW,UACX,SAAU,UAClB,CAAO,GAGHH,EAAmBE,EAAc,CAAC,EAClCR,EAAY,UAAU,IAAI,UAAU,EAEpC,QAAQ,IAAIM,CAAgB,CAC7B,CACH,EAEWI,EAAU,mBAAoBH,CAAO,EAEhD,SAASF,GAAU,CACjB,OAAO,YAAY,IAAM,CACvB,MAAMM,EAAWC,EAAUN,EAAmB,IAAI,IAAM,EACxDL,EAAU,YAAcY,EAAeF,EAAS,IAAI,EACpDT,EAAW,YAAcW,EAAeF,EAAS,KAAK,EACtDR,EAAa,YAAcU,EAAeF,EAAS,OAAO,EAC1DP,EAAa,YAAcS,EAAeF,EAAS,OAAO,CAC3D,EAAE,GAAI,CACT,CAGA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}